
base_url : "https://eshopify-ab01fd960199.herokuapp.com"
Platform Deployed: Github / Heroku
Database: Posgresql
Authentication: JsonWebToken

Db Schema

-- Admin Table
CREATE TABLE admin (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    role VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Users Table
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    firstname VARCHAR(50) NOT NULL,
    lastname VARCHAR(50) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    gender VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE categories (
    id SERIAL PRIMARY KEY,
    category_name VARCHAR(50) NOT NULL,
      description TEXT,
    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE products (
    id SERIAL PRIMARY KEY,
    category_id INT REFERENCES categories(id) ON DELETE CASCADE,
    product_name VARCHAR(50) NOT NULL,
    price DECIMAL(13,2) NOT NULL,
    description TEXT,
    inventory INT DEFAULT 0, 
    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id) ON DELETE SET NULL,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) DEFAULT 'Pending',
    total_amount DECIMAL(13,2) NOT NULL,
    shipping_address TEXT,
    billing_address TEXT,
    payment_id INT   
);

CREATE TABLE payments (
    id SERIAL PRIMARY KEY,
    order_id INT REFERENCES orders(id) ON DELETE CASCADE,  
    amount DECIMAL(13,2) NOT NULL,
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    payment_method VARCHAR(50) NOT NULL,  
    status VARCHAR(20) DEFAULT 'Pending', 
    transaction_id VARCHAR(255),  
    details JSONB  
);








----------------------------------------------------------------
API Endpoints




Register Admin
# Endpoint: {base_url}/admin/register
# Method: POST

# Sample Request

{
    "username": "Admin",
    "email": "admin@example.com",
    "password": "zxcvbnm"
}

# Sample Response

{
    "success": true,
    "message": "Admin created successfully",
    "admin": {
        "id": 1,
        "username": "Admin",
        "email": "admin@example.com",
        "role": "admin",
        "password": "$2a$10$oCsSmq75H9HTFIZz5jgiM.oaeCkB/8Pi1tHKn8Qx7Dk6K/R9jwFsq",
        "date_created": "2024-08-08T11:40:49.730Z"
    }
}

#####################################################################


Login Admin
# Endpoint: {base_url}/admin/login
# Method: POST

# Sample Request

{
     "email": "admin@example.com",
    "password": "zxcvbnm"
}

# Sample Response

{
    "message": "Login successful",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZG1pbklkIjoxLCJhZG1pblJvbGUiOiJhZG1pbiIsImlhdCI6MTcyMzExNzQ4MiwiZXhwIjoxNzIzMTIxMDgyfQ.GqL44BIMUPoWeRzjGAMnMh2wtRIcTkm6kFOZLvkSUPA",
    "role": "admin"
}

######################################################################


Register User
# Endpoint: {base_url}/auth/register
# Method: POST

# Sample Request

{
    "username": "xunna",
    "firstname": "John",
    "lastname": "Doe",
    "email": "admin@example.com",
    "gender": "male",
    "password": "zxcvbnm"
}

# Sample Response

{
    "success": true,
    "message": "Admin created successfully",
    "admin": {
        "id": 1,
        "username": "xunna",
        "firstname": "John",
        "lastname": "Doe",
        "email": "xunna@example.com",
        "gender": "male",
        "password": "$2a$10$oCsSmq75H9HTFIZz5jgiM.oaeCkB/8Pi1tHKn8Qx7Dk6K/R9jwFsq",
        "date_created": "2024-08-08T11:40:49.730Z"
    }
}

#####################################################################


Login User
# Endpoint: {base_url}/auth/login
# Method: POST

# Sample Request

{
      "email": "xunna@example.com",
    "password": "zxcvbnm"
}

# Sample Response

{
    "message": "Login successful",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZG1pbklkIjoxLCJhZG1pblJvbGUiOiJhZG1pbiIsImlhdCI6MTcyMzExNzQ4MiwiZXhwIjoxNzIzMTIxMDgyfQ.GqL44BIMUPoWeRzjGAMnMh2wtRIcTkm6kFOZLvkSUPA"
   
}

######################################################################


- Category Endpoints

Create Category

# Endpoint:{base_url}/categories
# Method: POST

# Sample Request

{
    "category_name": "Electronics",
    "description": "Devices and gadgets"
}


# Sample Response

{
    "message": "Category created successfully",
    "category": {
        "id": 1,
        "category_name": "Electronics",
        "description": "Devices and gadgets",
        "date_created": "2024-08-10T00:00:00Z"
    }
}


######################################################################

Get All Categories

# Endpoint:{base_url}/categories
# Method: GET


# Sample Response

[
    {
        "id": 1,
        "category_name": "Electronics",
        "description": "Devices and gadgets",
        "date_created": "2024-08-10T00:00:00Z"
    },
    {
        "id": 2,
        "category_name": "Books",
        "description": "Various genres of books",
        "date_created": "2024-08-10T00:00:00Z"
    }
]



######################################################################


Get Category by ID

# Endpoint:{base_url}/categories/:id
# Method: GET

Sample Request
URL Parameter: id = 1


# Sample Response

{
    "id": 1,
    "category_name": "Electronics",
    "description": "Devices and gadgets",
    "date_created": "2024-08-10T00:00:00Z"
}




######################################################################


Update Category by ID

Create Category

# Endpoint:{base_url}/categories/:id
# Method: PUT

# Sample Request

{
    "category_name": "Electronics & Gadgets",
    "description": "Updated description"
}


# Sample Response

{
    "message": "Category updated successfully",
    "category": {
        "id": 1,
        "category_name": "Electronics & Gadgets",
        "description": "Updated description",
        "date_created": "2024-08-10T00:00:00Z"
    }
}


######################################################################

Delete Category by ID

Create Category

# Endpoint:{base_url}/categories/:id
# Method: DELETE


# Sample Response

{
    "message": "Category deleted successfully"
}



######################################################################


- Product Endpoints

Create Product


# Endpoint:{base_url}/products
# Method: POST

# Sample Request

{
    "category_id": 1,
    "product_name": "Smartphone",
    "price": 699.99,
    "description": "Latest model with high specs",
    "inventory": 50
}


# Sample Response

{
    "message": "Product created successfully",
    "product": {
        "id": 1,
        "category_id": 1,
        "product_name": "Smartphone",
        "price": 699.99,
        "description": "Latest model with high specs",
        "inventory": 50,
        "date_created": "2024-08-10T00:00:00Z"
    }
}



######################################################################


Get All products

# Endpoint:{base_url}/products
# Method: GET


# Sample Response

[
    {
        "id": 1,
        "category_id": 1,
        "product_name": "Smartphone",
        "price": 699.99,
        "description": "Latest model with high specs",
        "inventory": 50,
        "date_created": "2024-08-10T00:00:00Z"
    },
    {
        "id": 2,
        "category_id": 2,
        "product_name": "Novel",
        "price": 19.99,
        "description": "A thrilling novel",
        "inventory": 100,
        "date_created": "2024-08-10T00:00:00Z"
    }
]




######################################################################


Get Product by ID

# Endpoint:{base_url}/products/:id
# Method: GET


# Sample Response

{
    "id": 1,
    "category_id": 1,
    "product_name": "Smartphone",
    "price": 699.99,
    "description": "Latest model with high specs",
    "inventory": 50,
    "date_created": "2024-08-10T00:00:00Z"
}




######################################################################


Update Product by ID



# Endpoint:{base_url}/categories/:id
# Method: PUT

# Sample Request

{
    "category_id": 1,
    "product_name": "Smartphone Pro",
    "price": 799.99,
    "description": "Updated model with additional features",
    "inventory": 30
}



# Sample Response

{
    "message": "Product updated successfully",
    "product": {
        "id": 1,
        "category_id": 1,
        "product_name": "Smartphone Pro",
        "price": 799.99,
        "description": "Updated model with additional features",
        "inventory": 30,
        "date_created": "2024-08-10T00:00:00Z"
    }
}



######################################################################


Delete Product by ID



# Endpoint:{base_url}/products/:id
# Method: DELETE


# Sample Response

{
    "message": "Product deleted successfully"
}



######################################################################


- Order Endpoints

Create Order

# Endpoint:{base_url}/orders
# Method: POST

# Sample Request

{
    "user_id": 1,
    "total_amount": 719.98,
    "status": "Pending",
    "shipping_address": "123 Main St, Anytown, USA",
    "billing_address": "123 Main St, Anytown, USA",
    "payment_id": 1
}



# Sample Response

{
    "message": "Order created successfully",
    "order": {
        "id": 1,
        "user_id": 1,
        "order_date": "2024-08-10T00:00:00Z",
        "status": "Pending",
        "total_amount": 719.98,
        "shipping_address": "123 Main St, Anytown, USA",
        "billing_address": "123 Main St, Anytown, USA",
        "payment_id": 1
    }
}



######################################################################


Get All Orders

# Endpoint:{base_url}/orders
# Method: GET


# Sample Response

[
    {
        "id": 1,
        "user_id": 1,
        "order_date": "2024-08-10T00:00:00Z",
        "status": "Pending",
        "total_amount": 719.98,
        "shipping_address": "123 Main St, Anytown, USA",
        "billing_address": "123 Main St, Anytown, USA",
        "payment_id": 1
    }
]




######################################################################


Get Order by ID

# Endpoint:{base_url}/orders/:id
# Method: GET


# Sample Response

{
    "id": 1,
    "user_id": 1,
    "order_date": "2024-08-10T00:00:00Z",
    "status": "Pending",
    "total_amount": 719.98,
    "shipping_address": "123 Main St, Anytown, USA",
    "billing_address": "123 Main St, Anytown, USA",
    "payment_id": 1
}




######################################################################


Update Order by ID



# Endpoint:{base_url}/orders/:id
# Method: PUT

# Sample Request

{
    "status": "Shipped",
    "shipping_address": "456 Elm St, Anytown, USA"
}



# Sample Response

{
    "message": "Order updated successfully",
    "order": {
        "id": 1,
        "user_id": 1,
        "order_date": "2024-08-10T00:00:00Z",
        "status": "Shipped",
        "total_amount": 719.98,
        "shipping_address": "456 Elm St, Anytown, USA",
        "billing_address": "123 Main St, Anytown, USA",
        "payment_id": 1
    }
}



######################################################################


Delete Order by ID



# Endpoint:{base_url}/orders/:id
# Method: DELETE


# Sample Response

{
    "message": "Order deleted successfully"
}



######################################################################



- Payment Endpoints

Create Payment

# Endpoint:{base_url}/payments
# Method: POST

# Sample Request

{
    "order_id": 1,
    "amount": 719.98,
    "payment_method": "Credit Card",
    "status": "Completed",
    "transaction_id": "abc123xyz",
    "details": {
        "card_last_four": "1234",
        "payment_gateway": "Stripe"
    }
}




# Sample Response

{
    "message": "Payment created successfully",
    "payment": {
        "id": 1,
        "order_id": 1,
        "amount": 719.98,
        "payment_date": "2024-08-10T00:00:00Z",
        "payment_method": "Credit Card",
        "status": "Completed",
        "transaction_id": "abc123xyz",
        "details": {
            "card_last_four": "1234",
            "payment_gateway": "Stripe"
        }
    }
}




######################################################################


Get All Payments

# Endpoint:{base_url}/payments
# Method: GET


# Sample Response

[
    {
        "id": 1,
        "order_id": 1,
        "amount": 719.98,
        "payment_date": "2024-08-10T00:00:00Z",
        "payment_method": "Credit Card",
        "status": "Completed",
        "transaction_id": "abc123xyz",
        "details": {
            "card_last_four": "1234",
            "payment_gateway": "Stripe"
        }
    }
]




######################################################################


Get Payment by ID

# Endpoint:{base_url}/payments/:id
# Method: GET


# Sample Response

{
    "id": 1,
    "order_id": 1,
    "amount": 719.98,
    "payment_date": "2024-08-10T00:00:00Z",
    "payment_method": "Credit Card",
    "status": "Completed",
    "transaction_id": "abc123xyz",
    "details": {
        "card_last_four": "1234",
        "payment_gateway": "Stripe"
    }
}





######################################################################


Update Payment by ID



# Endpoint:{base_url}/payments/:id
# Method: PUT

# Sample Request

{
    "amount": 699.99,
    "status": "Refunded"
}



# Sample Response

{
    "message": "Payment updated successfully",
    "payment": {
        "id": 1,
        "order_id": 1,
        "amount": 699.99,
        "payment_date": "2024-08-10T00:00:00Z",
        "payment_method": "Credit Card",
        "status": "Refunded",
        "transaction_id": "abc123xyz",
        "details": {
            "card_last_four": "1234",
            "payment_gateway": "Stripe"
        }
    }
}




######################################################################


Delete Payment by ID


# Endpoint:{base_url}/payments/:id
# Method: DELETE


# Sample Response

{
    "message": "Payment deleted successfully"
}




######################################################################